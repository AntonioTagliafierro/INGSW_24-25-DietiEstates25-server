name: Build, Test & SonarCloud Scan

on:
  push:
    branches:
      - main
      - master
  pull_request:

jobs:
  build:
    name: Build, Test & SonarCloud
    runs-on: ubuntu-latest
    env:
      PORT: 8080
      JWT_ISSUER: ${{ secrets.JWT_ISSUER || 'http://0.0.0.0:27017' }}
      JWT_DOMAIN: ${{ secrets.JWT_DOMAIN || 'http://0.0.0.0:27017' }}
      JWT_AUDIENCE: ${{ secrets.JWT_AUDIENCE || 'users' }}
      JWT_REALM: ${{ secrets.JWT_REALM || 'ktor sample app' }}
      MAILERSEND_TOKEN: ${{ secrets.MAILERSEND_TOKEN || 'dummy-token' }}
      MAILERSEND_BASE_URL: ${{ secrets.MAILERSEND_BASE_URL || 'https://api.mailersend.com' }}
      MAILERSEND_TEMPLATE: ${{ secrets.MAILERSEND_TEMPLATE || 'dummy-template-id' }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and test
        run: ./gradlew clean build --stacktrace

      - name: Run SonarCloud Analysis
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: ./gradlew sonar \
          -Dsonar.projectKey=DietiEstates25_backend \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.token=$SONAR_TOKEN
